/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var M=Object.create;var y=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var Y=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var A=(a,e)=>{for(var t in e)y(a,t,{get:e[t],enumerable:!0})},S=(a,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of k(e))!H.call(a,i)&&i!==t&&y(a,i,{get:()=>e[i],enumerable:!(s=N(e,i))||s.enumerable});return a};var F=(a,e,t)=>(t=a!=null?M(Y(a)):{},S(e||!a||!a.__esModule?y(t,"default",{value:a,enumerable:!0}):t,a)),O=a=>S(y({},"__esModule",{value:!0}),a);var L={};A(L,{default:()=>v});module.exports=O(L);var n=require("obsidian"),c=F(require("path")),P=F(require("fs"));var h=F(require("fs")),f=F(require("path")),w=class extends Error{constructor(e,t){super(e),this.code=t}};function $(a,e=new Date){let t=(s,i=2)=>String(s).padStart(i,"0");return a.replace(/YYYY/g,String(e.getFullYear())).replace(/MM/g,t(e.getMonth()+1)).replace(/DD/g,t(e.getDate())).replace(/HH/g,t(e.getHours())).replace(/mm/g,t(e.getMinutes())).replace(/ss/g,t(e.getSeconds()))}var D=/^---\n[\s\S]*?\n---\n?/;function B(a,e){let t=a,s=!1;return e.sanitizeFrontmatter&&D.test(t)&&(t=t.replace(D,""),s=!0),e.addTimestampHeader&&(t=`<!-- Pushed: ${$(e.timestampFormat||"YYYY-MM-DD HH:mm")} -->
`+t,s=!0),{content:t,transformed:s}}async function b(a,e,t,s){let i=await a.read(e),{content:o,transformed:u}=B(i,s),r=e.path;t.replicateFolders||(r=f.basename(r)),s.forceExtension&&(r=r.replace(/\.[^.]+$/,"")+s.forceExtension);let l=f.join(t.targetBase,r),p=f.dirname(l);await h.promises.mkdir(p,{recursive:!0});let x=l;if(!t.overwriteExisting&&h.existsSync(l)){let g=f.extname(l),d=l.slice(0,l.length-g.length),m=1;for(;h.existsSync(`${d}-${m}${g}`);)m++;x=`${d}-${m}${g}`}let T=x+".tmp";try{await h.promises.writeFile(T,o,"utf8"),await h.promises.rename(T,x)}catch(g){if(h.existsSync(T))try{await h.promises.unlink(T)}catch(R){}let d;g&&typeof g=="object"&&"code"in g&&(d=g.code);let m="Failed to write file";throw d==="EACCES"||d==="EPERM"?m="Permission denied writing destination":d==="ENOENT"&&(m="Destination path not found"),new w(`${m}: ${x}`,d)}return{source:e.path,finalPath:x,bytes:Buffer.byteLength(o,"utf8"),transformed:u}}async function C(a,e,t,s){let i=[],o=[];for(let u of e)try{let r=await b(a,u,t,s);i.push(r)}catch(r){let l,p="Unknown error";r instanceof w?(l=r.code,p=r.message):r instanceof Error&&(p=r.message),o.push({file:u.path,error:p,code:l}),console.error("Push error",u.path,r)}return{successes:i,failures:o}}var V={targetDir:"",replicateFolders:!0,overwriteExisting:!0,notifyOnSuccess:!0,sanitizeFrontmatter:!1,addTimestampHeader:!1,timestampFormat:"YYYY-MM-DD HH:mm",forceExtension:"",successNoticeMessage:"Note pushed to www.juanchiparra.com"},v=class extends n.Plugin{async onload(){await this.loadSettings(),this.addCommand({id:"push-current-note",name:"Push current note to target directory",checkCallback:e=>{let t=this.app.workspace.getActiveViewOfType(n.MarkdownView);if(!t)return!1;let s=t.file;return!s||!this.settings.targetDir?!1:(e||this.pushFile(s).catch(i=>this.handlePushError(i)),!0)}}),this.addCommand({id:"push-modified-today",name:"Push notes modified today",callback:async()=>{if(!this.ensureTargetConfigured())return;let e=this.gatherModifiedToday();if(!e.length)return new n.Notice("No notes modified today");let t=await this.pushFiles(e);new n.Notice(`Pushed ${t.successes} / ${t.total} notes`)}}),this.addCommand({id:"push-selected-files",name:"Push selected files in explorer",callback:async()=>{if(!this.ensureTargetConfigured())return;let e=this.getExplorerSelection();if(!e.length)return new n.Notice("No selection in explorer");let t=await this.pushFiles(e);new n.Notice(`Pushed ${t.successes} / ${t.total} selected`)}}),this.addCommand({id:"pull-current-note",name:"Pull current note from target directory",checkCallback:e=>{let t=this.app.workspace.getActiveViewOfType(n.MarkdownView);if(!t)return!1;let s=t.file;return!s||!this.settings.targetDir?!1:(e||this.pullFile(s).catch(i=>this.handlePullError(i)),!0)}}),this.addCommand({id:"pull-selected-files",name:"Pull selected files from target directory",callback:async()=>{if(!this.ensureTargetConfigured())return;let e=this.getExplorerSelection();if(!e.length)return new n.Notice("No selection in explorer");let t=0;for(let s of e)try{await this.pullFile(s),t++}catch(i){this.handlePullError(i)}new n.Notice(`Pulled ${t} / ${e.length}`)}}),this.addSettingTab(new E(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},V,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}resolveTargetBase(){var t;let e=this.settings.targetDir.trim();if(!e)return null;if(!c.isAbsolute(e)){let s=this.getAdapter(),i=(t=s==null?void 0:s.getBasePath)==null?void 0:t.call(s);i&&(e=c.resolve(i,e))}return e}getAdapter(){let e=this.app.vault.adapter;return e&&typeof e.getBasePath=="function"?e:null}async pushFile(e){let t=this.buildPushContext();if(!t){new n.Notice("Push: targetDir not configured");return}let s=this.buildTransformOptions();try{let i=await b(this.app.vault,e,t,s);this.settings.notifyOnSuccess&&new n.Notice(this.renderSuccessMessage(i.finalPath))}catch(i){this.handlePushError(i)}}async pushFiles(e){let t=this.buildPushContext();if(!t)return{total:e.length,successes:0,failures:0};let s=this.buildTransformOptions(),i=await C(this.app.vault,e,t,s);return i.failures.length&&console.warn("Push failures:",i.failures),{total:e.length,successes:i.successes.length,failures:i.failures.length}}ensureTargetConfigured(){return this.settings.targetDir?!0:(new n.Notice("Configure targetDir first"),!1)}gatherModifiedToday(){let e=new Date;return e.setHours(0,0,0,0),this.app.vault.getMarkdownFiles().filter(t=>t.stat.mtime>=e.getTime())}renderSuccessMessage(e){return(this.settings.successNoticeMessage||"Note pushed").replace("{path}",e)}buildTransformOptions(){return{sanitizeFrontmatter:this.settings.sanitizeFrontmatter,addTimestampHeader:this.settings.addTimestampHeader,timestampFormat:this.settings.timestampFormat,forceExtension:this.settings.forceExtension||void 0}}buildPushContext(){let e=this.resolveTargetBase();return e?{replicateFolders:this.settings.replicateFolders,overwriteExisting:this.settings.overwriteExisting,targetBase:e}:null}computeTargetFilePath(e,t,s){let i=e.path;return t.replicateFolders||(i=c.basename(i)),s.forceExtension&&(i=i.replace(/\.[^.]+$/,"")+s.forceExtension),c.join(t.targetBase,i)}async pullFile(e){let t=this.buildPushContext();if(!t){new n.Notice("Pull: targetDir not configured");return}let s=this.buildTransformOptions(),i=this.computeTargetFilePath(e,t,s);try{if(!P.existsSync(i)){if(s.forceExtension){let u=c.join(t.targetBase,t.replicateFolders?e.path:c.basename(e.path));if(P.existsSync(u)){await this.applyPulledContent(e,await P.promises.readFile(u,"utf8")),new n.Notice("Pulled (fallback extension)");return}}new n.Notice("Target file not found for pull");return}let o=await P.promises.readFile(i,"utf8");await this.applyPulledContent(e,o),new n.Notice("Note pulled")}catch(o){this.handlePullError(o)}}async applyPulledContent(e,t){await this.app.vault.modify(e,t)}handlePullError(e){console.error("Pull error",e);let t="Pull failed";e instanceof Error&&(t=e.message),new n.Notice(t,8e3)}handlePushError(e){console.error("Push error",e);let t="Push failed";(e instanceof w||e instanceof Error)&&(t=e.message),new n.Notice(t,8e3)}getExplorerSelection(){let e=[],t=document.querySelector(".nav-files-container, .nav-files");return t&&t.querySelectorAll(".is-selected").forEach(i=>{var u,r;let o=((u=i.getAttr)==null?void 0:u.call(i,"data-path"))||((r=i.dataset)==null?void 0:r.path);if(o){let l=this.app.vault.getAbstractFileByPath(o);l instanceof n.TFile&&e.push(l)}}),e}},E=class extends n.PluginSettingTab{constructor(e,t){super(e,t),this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Obsidian Push settings"}),new n.Setting(e).setName("Target directory").setDesc("Destination directory for exported notes (absolute or relative to vault root).").addText(t=>t.setPlaceholder("E.g.: ../exported-notes or C:/Users/User/Documents/export").setValue(this.plugin.settings.targetDir).onChange(async s=>{var u,r,l;this.plugin.settings.targetDir=s.trim();let i=(r=(u=this.plugin).getAdapter)==null?void 0:r.call(u),o=(l=i==null?void 0:i.getBasePath)==null?void 0:l.call(i);if(o&&this.plugin.settings.targetDir){let p=c.isAbsolute(this.plugin.settings.targetDir)?this.plugin.settings.targetDir:c.resolve(o,this.plugin.settings.targetDir);p.startsWith(o)&&p.startsWith(c.join(o,".obsidian"))&&new n.Notice("Warning: destination inside .obsidian may cause loops.")}await this.plugin.saveSettings()})),new n.Setting(e).setName("Replicate folder structure").setDesc("Preserve original subfolder hierarchy in destination directory.").addToggle(t=>t.setValue(this.plugin.settings.replicateFolders).onChange(async s=>{this.plugin.settings.replicateFolders=s,await this.plugin.saveSettings()})),new n.Setting(e).setName("Overwrite if exists").setDesc("If disabled, an incremental suffix will be added to avoid conflicts.").addToggle(t=>t.setValue(this.plugin.settings.overwriteExisting).onChange(async s=>{this.plugin.settings.overwriteExisting=s,await this.plugin.saveSettings()})),new n.Setting(e).setName("Success notification").setDesc("Show a notice when a note is successfully pushed.").addToggle(t=>t.setValue(this.plugin.settings.notifyOnSuccess).onChange(async s=>{this.plugin.settings.notifyOnSuccess=s,await this.plugin.saveSettings()})),new n.Setting(e).setName("Success message template").setDesc('Use {path} to inject the final path (e.g. "Note exported: {path}")').addText(t=>t.setPlaceholder("Note pushed to www.juanchiparra.com").setValue(this.plugin.settings.successNoticeMessage||"").onChange(async s=>{this.plugin.settings.successNoticeMessage=s,await this.plugin.saveSettings()})),new n.Setting(e).setName("Remove frontmatter").setDesc("Strip leading YAML frontmatter if present.").addToggle(t=>t.setValue(this.plugin.settings.sanitizeFrontmatter).onChange(async s=>{this.plugin.settings.sanitizeFrontmatter=s,await this.plugin.saveSettings()})),new n.Setting(e).setName("Add timestamp header").setDesc("Insert an HTML comment with push date/time at the top of the file.").addToggle(t=>t.setValue(this.plugin.settings.addTimestampHeader).onChange(async s=>{this.plugin.settings.addTimestampHeader=s,await this.plugin.saveSettings()})),new n.Setting(e).setName("Timestamp format").setDesc("Supported tokens: YYYY MM DD HH mm ss").addText(t=>t.setPlaceholder("YYYY-MM-DD HH:mm").setValue(this.plugin.settings.timestampFormat).onChange(async s=>{this.plugin.settings.timestampFormat=s||"YYYY-MM-DD HH:mm",await this.plugin.saveSettings()})),new n.Setting(e).setName("Force extension").setDesc("Example: .md / .txt. Leave empty to keep original extension.").addText(t=>t.setPlaceholder(".md / .txt").setValue(this.plugin.settings.forceExtension).onChange(async s=>{this.plugin.settings.forceExtension=s.trim(),await this.plugin.saveSettings()}))}};
